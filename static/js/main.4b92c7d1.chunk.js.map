{"version":3,"sources":["panels/Home.js","panels/Persik.js","panels/BTC.js","panels/LTC.js","App.js","sw.js","index.js","img/persik.png","img/BTC.png","img/LTC.png"],"names":["Home","_ref","id","go","fetchedUser","react_default","a","createElement","vkui","title","before","photo_200","src","description","city","concat","first_name","last_name","size","level","onClick","data-to","osname","platform","Persik","props","left","IOS","chevron_back_default","back_default","className","persik","alt","BTC","bitcoin","LTC","litecoin","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","setState","activePanel","currentTarget","dataset","to","state","_this2","connect","subscribe","detail","type","data","console","log","send","panels_Home","src_panels_Persik","panels_BTC","panels_LTC","React","Component","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","isLocalhost","Boolean","window","location","hostname","match","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","ReactDOM","render","src_App","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.4b92c7d1.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Panel, ListItem, Button, Group, Div, Avatar, PanelHeader } from '@vkontakte/vkui';\r\n\r\nconst Home = ({ id, go, fetchedUser }) => (\r\n\t<Panel id={id}>\r\n\t\t<PanelHeader>Crypto</PanelHeader>\r\n\t\t{fetchedUser &&\r\n\t\t<Group title=\"User Data Fetched with VK Connect\">\r\n\t\t\t<ListItem\r\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\r\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\r\n\t\t\t>\r\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\r\n\t\t\t</ListItem>\r\n\t\t</Group>}\r\n\r\n\t\t<Group title=\"Name\">\r\n\t\t\t<Div>\r\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"bitcoin\">\r\n\t\t\t\t\tShow me the Bitcoin, please\r\n\t\t\t\t</Button>\r\n\t\t\t</Div>\r\n\t\t\t<Div>\r\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"litecoin\">\r\n\t\t\t\t\tShow me the Litecoin, please\r\n\t\t\t\t</Button>\r\n\t\t\t</Div>\r\n\r\n\t\t</Group>\r\n\t</Panel>\r\n);\r\n\r\nHome.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n\tfetchedUser: PropTypes.shape({\r\n\t\tphoto_200: PropTypes.string,\r\n\t\tfirst_name: PropTypes.string,\r\n\t\tlast_name: PropTypes.string,\r\n\t\tcity: PropTypes.shape({\r\n\t\t\ttitle: PropTypes.string,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Panel, PanelHeader, HeaderButton, platform, IOS} from '@vkontakte/vkui';\nimport persik from '../img/persik.png';\nimport './Persik.css';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nconst osname = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osname === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</HeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Panel, PanelHeader, HeaderButton, platform, IOS} from '@vkontakte/vkui';\r\nimport bitcoin from '../img/BTC.png';\r\nimport './Persik.css';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\n\r\nconst osname = platform();\r\n\r\nconst BTC= props => (\r\n\t<Panel id={props.id}>\r\n\t\t<PanelHeader\r\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\r\n\t\t\t\t{osname === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n\t\t\t</HeaderButton>}\r\n\t\t>\r\n\t\t\tBTC\r\n\t\t</PanelHeader>\r\n\t\t<img className=\"BTC\" src={bitcoin} alt=\"BTC crypto\"/>\r\n\t</Panel>\r\n);\r\n\r\nBTC.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default BTC;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Panel, PanelHeader, HeaderButton, platform, IOS} from '@vkontakte/vkui';\r\nimport litecoin from '../img/LTC.png';\r\nimport './Persik.css';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\n\r\nconst osname = platform();\r\n\r\nconst LTC = props => (\r\n\t<Panel id={props.id}>\r\n\t\t<PanelHeader\r\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\r\n\t\t\t\t{osname === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n\t\t\t</HeaderButton>}\r\n\t\t>\r\n\t\t\tLTC\r\n\t\t</PanelHeader>\r\n\t\t<img className=\"LTC\" src={litecoin} alt=\"LTC crypto\"/>\r\n\t</Panel>\r\n);\r\n\r\nLTC.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default LTC;\r\n","import React from 'react';\r\nimport connect from '@vkontakte/vkui-connect';\r\nimport { View } from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport Home from './panels/Home';\r\nimport Persik from './panels/Persik';\r\nimport BTC from './panels/BTC';\r\nimport LTC from './panels/LTC';\r\n\r\nclass App extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tactivePanel: 'home',\r\n\t\t\tfetchedUser: null,\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconnect.subscribe((e) => {\r\n\t\t\tswitch (e.detail.type) {\r\n\t\t\t\tcase 'VKWebAppGetUserInfoResult':\r\n\t\t\t\t\tthis.setState({ fetchedUser: e.detail.data });\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.log(e.detail.type);\r\n\t\t\t}\r\n\t\t});\r\n\t\tconnect.send('VKWebAppGetUserInfo', {});\r\n\t}\r\n\r\n\tgo = (e) => {\r\n\t\tthis.setState({ activePanel: e.currentTarget.dataset.to })\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<View activePanel={this.state.activePanel}>\r\n\t\t\t\t<Home id=\"home\" fetchedUser={this.state.fetchedUser} go={this.go} />\r\n\t\t\t\t<Persik id=\"persik\" go={this.go} />\r\n\t\t\t\t<BTC id=\"bitcoin\" go={this.go} />\r\n\t\t\t\t<LTC id=\"litecoin\" go={this.go} />\r\n\t\t\t</View>\r\n\r\n\r\n\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nfunction registerValidSW(swUrl) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the old content will have been purged and\n\t\t\t\t\t\t\t// the fresh content will have been added to the cache.\n\t\t\t\t\t\t\t// It's the perfect time to display a \"New content is\n\t\t\t\t\t\t\t// available; please refresh.\" message in your web app.\n\t\t\t\t\t\t\tconsole.log('New content is available; please refresh.');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\tresponse.headers.get('content-type').indexOf('javascript') === -1\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n\t// [::1] is the IPv6 localhost address.\n\twindow.location.hostname === '[::1]' ||\n\t// 127.0.0.1/8 is considered localhost for IPv4.\n\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\nexport default function register() {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Lets check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t'worker. To learn more, visit https://goo.gl/SC7cgQ'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not local host. Just register service worker\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import 'core-js/es6/map';\r\nimport 'core-js/es6/set';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport connect from '@vkontakte/vkui-connect';\r\nimport App from './App';\r\n import registerServiceWorker from './sw';\r\n\r\n// Init VK App\r\nconnect.send('VKWebAppInit', {});\r\n\r\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\r\n// расскомментируйте строку с registerServiceWorker();\r\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\r\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \r\n registerServiceWorker();\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","module.exports = __webpack_public_path__ + \"static/media/BTC.ca0efbf4.png\";","module.exports = __webpack_public_path__ + \"static/media/LTC.c32cbdda.png\";"],"sourceRoot":""}